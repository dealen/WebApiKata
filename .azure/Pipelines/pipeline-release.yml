trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  azureSubscription: '<your-azure-subscription>'
  appServiceName: '<your-app-service-name>'
  resourceGroupName: '<your-resource-group>'
  packagePath: '$(Build.ArtifactStagingDirectory)/**/*.zip'

jobs:
- job: Build
  displayName: 'Build Application'
  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'publish'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      replaceExistingArchive: true

  - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    artifact: drop

- job: Deploy
  displayName: 'Deploy to Azure Web App'
  dependsOn: Build
  steps:
  - task: AzureWebApp@1
    inputs:
      azureSubscription: '$(azureSubscription)'
      appName: '$(appServiceName)'
      package: '$(packagePath)'